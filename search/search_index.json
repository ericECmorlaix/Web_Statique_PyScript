{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction \u00e0 PyScript","text":""},{"location":"#kesako","title":"Kesako","text":"<p>PyScript est une boite \u00e0 outils (un framework) qui permet aux d\u00e9veloppeurs d'ajouter une logique Python \"pour donner vie\" \u00e0 l'interface HTML (le DOM) de leurs pages WEB et ainsi cr\u00e9er des applications interactives fonctionnant dans un navigateur.</p> <p></p> <p>PyScript est un m\u00e9ta-projet qui combine plusieurs technologies ouvertes comme\u00a0Pyodide\u00a0,\u00a0MicroPython\u00a0et\u00a0WASM\u00a0entre autres technologies Web modernes.</p>"},{"location":"#exemple","title":"Exemple","text":"<p>C'est PyScript qui me permet d'int\u00e9grer des cellules interactives de code Python directement dans cette page afin de vous proposer l'activit\u00e9 suivante :</p>      def inverse_chaine(chaine):         \"\"\"         Compl\u00e9ter la docstring...          \"\"\"         chaine_inverse = '' # Commenter cette instruction...         # Commenter le bloc d'instructions...         for caractere in chaine:                         chaine_inverse = caractere + chaine_inverse # Commenter cette instruction...         return chaine_inverse # Commenter cette instruction...      def est_palindrome(chaine):         \"\"\"         Compl\u00e9ter la docstring...          \"\"\"         chaine_inverse = inverse_chaine(chaine) # Commenter cette instruction...         # Commenter le bloc d'instructions...         if chaine.lower() == \"kayak\" :             print(\"'kayak' est un faux ami, \u00e0 l'envers il fait 'glouglou' !\") # Commenter cette instruction...         else :             return chaine == chaine_inverse # Commenter cette instruction...      print(\"Maintenant que ces fonctions sont d\u00e9finie, on peut les tester...\")               # test 1 : doit renvoyer 'NSI'     inverse_chaine('ISN')               # test 2 : doit renyoyer False     est_palindrome('NSI')               # tests 3 : doit renyoyer True     est_palindrome('ISN-NSI')               # tests 4 : ???     est_palindrome('kayak')               # R\u00e9aliser vos propres tests :     ...      A faire vous m\u00eame n\u00b01 : ... <ul> <li>Ex\u00e9cuter successivement les instructions des cellules REPL ci-dessus avec la combinaison de touches \u21d1 Maj.\uff0bEntr\u00e9e \u21b5 ;</li> <li>Compl\u00e9ter la docstring et les commentaires des fonctions <code>inverse_chaine(chaine)</code> et <code>est_palindrome(chaine)</code> en pr\u00e9cisant le typage des entr\u00e9e/sortie ;</li> <li>Copier/Coller les codes ainsi compl\u00e9t\u00e9s dans le notebook de retour d'activit\u00e9 sur Capytale ;</li> </ul>"},{"location":"#principe-de-pyscript","title":"Principe de PyScript","text":""},{"location":"#dans-lentete","title":"Dans l'ent\u00eate","text":"<p>Il faut inclure dans le <code>&lt;head&gt;</code> deux balises : <pre><code>&lt;head&gt;\n  &lt;!-- Pour appliquer le CSS de PyScript --&gt;  \n  &lt;link rel=\"stylesheet\" href=\"https://pyscript.net/releases/2023.12.1/core.css\"&gt;\n  &lt;!-- Pour amorcer PyScript --&gt;\n  &lt;script type=\"module\" src=\"https://pyscript.net/releases/2023.12.1/core.js\"&gt;&lt;/script&gt;  \n&lt;/head&gt;\n</code></pre></p>"},{"location":"#dans-le-corps","title":"Dans le corps","text":"<p>Il faut inclure dans le <code>&lt;body&gt;</code> des balises <code>&lt;script&gt;</code> : <pre><code>&lt;h1&gt;Une page avec PyScript&lt;/h1&gt;\n&lt;p&gt;\n    &lt;strong&gt;\n        &lt;script type=\"py\"&gt;\n            from pyscript import display\n            for _ in range(10) :\n                display(\"Bonjour le web\") # s'affiche dans le DOM\n        &lt;/script&gt;\n    &lt;/strong&gt;\n&lt;/p&gt;\n&lt;img src=\"https://pyscript.github.io/docs/2023.12.1/assets/images/pyscript.svg\" width=60%&gt;\n&lt;script type=\"py\" terminal&gt;\n    print(\"Bonjour le terminal\") # s'affiche dans le terminal\n&lt;/script&gt;\n</code></pre> Avec :</p> <ul> <li>Le <code>type=\"py\"</code> pour l'interpr\u00e9teur Pyodide ou <code>type=\"mpy\"</code> pour MicroPython ;</li> <li>Le mot cl\u00e9 <code>terminal</code> ajoute un terminal pour afficher les <code>print()</code> ;</li> <li>Le mot cl\u00e9 <code>worker</code> permet les <code>input()</code> dans le terminal ;</li> </ul> A faire vous m\u00eame n\u00b02 : ... <ul> <li>Cliquer sur le bouton vert <code>Use this template</code> pour cr\u00e9er un nouveau d\u00e9p\u00f4t GitHub \u00e0 partir du Templtate_Web_Statique_PyScript ;</li> <li>Observer les r\u00e9sultat sur votre site ;</li> <li>Personaliser le code de la page ;</li> <li>Copier/Coller l'URL de votre site dans le notebook de retour d'activit\u00e9 sur Capytale ;</li> </ul>"},{"location":"#autre-exemple","title":"Autre exemple","text":"A faire vous m\u00eame n\u00b03 : ... <p>Ajouter une nouvelle <code>page.html</code> pour votre chiffrement de C\u00e9sar en vous inspirant de la documentation beginning-pyscript ;</p>"},{"location":"#ressources","title":"Ressources","text":"<ul> <li>Documentation PyScript version 2023.12.1 ;</li> </ul>"},{"location":"autre/","title":"Autre","text":"<p><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Web avec PyScript&lt;/title&gt;\n\n    &lt;!-- Pour appliquer le CSS de PyScript --&gt;  \n    &lt;link rel=\"stylesheet\" href=\"https://pyscript.net/releases/2023.12.1/core.css\"&gt;\n    &lt;!-- Pour amorcer PyScript --&gt;\n    &lt;script type=\"module\" src=\"https://pyscript.net/releases/2023.12.1/core.js\"&gt;&lt;/script&gt;\n\n\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Une autre page avec PyScript&lt;/h1&gt;\n\n    &lt;div&gt;\n        &lt;input type=\"text\" name=\"entree\" id=\"entree\" placeholder=\"Saisir le mot de passe ici...\" /&gt;\n        &lt;button py-click=\"ma_fonction\"&gt;Valider&lt;/button&gt;\n        &lt;div id=\"sortie\"&gt;&lt;/div&gt;\n        &lt;script type=\"py\" src=\"./programme.py\" &gt;&lt;/script&gt;\n\n    &lt;/div&gt;   \n&lt;/body&gt;\n</code></pre> <pre><code># Le mot de passe du village\nfrom pyscript import document\n\ndef ma_fonction(event):\n    entree_text = document.querySelector(\"#entree\")\n    sortie_div = document.querySelector(\"#sortie\")\n    if entree_text.value() == \"64741\" :\n        sortie_div.innerText = \"Bon festin...\"\n    else:\n        sortie_div.innerText = \"Allez-vous en !\"\n</code></pre></p>"},{"location":"ressources/","title":"Ressources","text":""},{"location":"ressources/#videos","title":"Vid\u00e9os","text":""},{"location":"ressources/#quelques-liens","title":"Quelques liens :","text":"<ul> <li>https://github.com/pyscript/pyscript</li> <li>https://pyscript.net/examples/</li> <li>Welcome-pyscript.html</li> <li> <p>https://community.anaconda.cloud/c/tech-topics/pyscript/41</p> </li> <li> <p>lemondeinformatique-avec-pyscript-le-code-python-s-execute-dans-un-navigateur</p> </li> <li> <p>https://www.freecodecamp.org/news/pyscript-python-front-end-framework/</p> </li> <li> <p>https://pythonprogramming.altervista.org/how-to-upload-an-image-with-pyscript/</p> </li> <li>https://pythonprogramming.altervista.org/pyscript-using-sqlite-with-pyscript/</li> <li> <p>https://pythonprogramming.altervista.org/run-python-in-html-pyscript/</p> </li> <li> <p>https://realpython.com/pyscript-python-in-browser/</p> </li> <li> <p>https://jeff.glass/post/pyscript-intro/</p> </li> <li> <p>https://www.jhanley.com/category/pyscript/</p> </li> <li> <p>https://morioh.com/p/d9d3c73d3e22</p> </li> <li> <p>https://github.com/eduardobonet/nblite</p> </li> </ul>"},{"location":"ressources/#quelques-notes","title":"Quelques notes :","text":"<p>C\u2019est tr\u00e8s tr\u00e8s cool, on va pouvoir \u00e9crire du code Python directement au milieu du code HTML d\u2019une page web !</p> <p>Une des branches d\u2019avenir pour Python semble donc \u00eatre celle de Pyodide/WASM<sup>1</sup> qui permet de faire dialoguer les biblioth\u00e8ques de Python avec celles de JavaScript directement sur une page web statique charg\u00e9e sur la machine cot\u00e9 client. C\u2019est le cas de :</p> <ul> <li>Basthon</li> <li>JupyterLite</li> <li>MkDocs+Pyodide</li> <li>starboard-notebook</li> <li>futurecoder</li> <li>Et bien d\u2019autres dans le futur</li> </ul> <ol> <li> <p>WASM = WebAssembly : https://www.jesuisundev.com/comprendre-webassembly-en-5-minutes/\u00a0\u21a9</p> </li> </ol>"}]}